name: Build ZMK Firmware

on:
  workflow_call:
    inputs:
      build_matrix:
        description: "Build configuration file"
        default: "build.yaml"
        required: false
        type: string
      archive_name:
        description: "Archive name"
        default: "firmware"
        required: false
        type: string

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
      - id: set-matrix
        run: |
          content=$(yq eval -o=json ${{ inputs.build_matrix }} | jq '{include: .include | map({name: .artificial_name, board: .board, shield: .shield, cmake_args: .["cmake-args"]})}')
          echo "matrix=$content" >> $GITHUB_OUTPUT

  build:
    needs: matrix
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache west modules
        uses: actions/cache@v4
        with:
          path: |
            modules/
            tools/
            zephyr/
          key: ${{ runner.os }}-modules-${{ hashFiles('**/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: West Init
        run: west init -l config

      - name: West Update
        run: west update

      - name: West Zephyr export
        run: west zephyr-export

      - name: West Build
        run: |
          west build -s zmk/app -b ${{ matrix.board }} -- -DSHIELD=${{ matrix.shield }} ${{ matrix.cmake_args }} ${{ env.EXTRA_CMAKE_ARGS }}
          if [ -f "build/zephyr/zmk.uf2" ]; then
            cp build/zephyr/zmk.uf2 ${{ matrix.name }}.uf2
          else
            cp build/zephyr/zmk.hex ${{ matrix.name }}.hex
          fi

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.name }}
          path: ${{ matrix.name }}.*

  merge:
    runs-on: ubuntu-latest
    needs: build
    name: Merge Artifacts
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ inputs.archive_name }}
          pattern: artifact-*
          delete-merged: true
